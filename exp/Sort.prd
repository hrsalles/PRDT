@uses("std/IO.itf"; "std/Time.itf"; "std/Vector.itf");

Procedure sort = (vector; @const Int, Procedure comparator) {
    @const BIGGER = 0;
    @const SMALLER = 1;
    Unsigned initial_position = Vector::len(vector) / 2;

    for (0 .. initial_position) {
        if (comparator(vector[initial_position]; vector[i]) == BIGGER) {
            tmp = vector[initial_position];
            vector[initial_position] = vector[i];
            vector[i] = tmp;

            sort(vector[(i + 1)..(Vector::len(vector) - 1)]);
        }
    }
};

@main Int, Procedure main := {
    sort(
        [1; 10; 20; 5; 0; 0; 55; 23; 40; 60; 30; 1; 2; 3; 50];
        Int, Procedure comparator = (@const Int left; @const Int right) {
            (comparator := select(left > right; 0; 1)).return();
        }
    );
};

